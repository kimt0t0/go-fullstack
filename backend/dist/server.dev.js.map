{"version":3,"sources":["server.js"],"names":["http","require","app","set","process","env","PORT","server","createServer","req","res","end","listen"],"mappings":";;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB,C,CAA8B;;;AAC9B,IAAMC,GAAG,GAAGD,OAAO,CAAC,OAAD,CAAnB,C,CAA8B;;;AAE9BC,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgBC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAApC,E,CACA;;AACA,IAAMC,MAAM,GAAGP,IAAI,CAACQ,YAAL,CAAkB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3CA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,8BAAR,EAD2C,CACF;AAC5C,CAFc,CAAf;AAIAJ,MAAM,CAACK,MAAP,CAAcR,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAlC,E,CAAyC;AAEzC","sourcesContent":["const http = require('http'); //importe le package HTTP natif de Node\r\nconst app = require('./app'); //importe l'application fonctionnant avec Express\r\n\r\napp.set('port', process.env.PORT || 3000);\r\n//création d'un serveur avec une fonction exécutée à chaque appel vers ce serveur:\r\nconst server = http.createServer((req, res) => {\r\n    res.end(\"Voici la réponse du serveur!\"); //réponse du serveur à l'appelant\r\n});\r\n\r\nserver.listen(process.env.PORT || 3000); //le serveur écoute soit le port indiqué par la plateforme, soit port 3000 par défaut\r\n\r\n//Exécuter 'node server' depuis la console pour démarrer le serveur!\r\n"],"file":"server.dev.js"}