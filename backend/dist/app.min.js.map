{"version":3,"sources":["app.js"],"names":["express","require","mongoose","app","use","json","connect","useNewUrlParser","useUnifiedTopology","then","console","log","res","setHeader","next","post","req","body","get","module","exports","stuff","_id","title","description","imageUrl","price","userId"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,SAAWD,QAAQ,YAEnBE,IAAMH,UAEZG,IAAIC,IAAIJ,QAAQK,QAIhBH,SAASI,QAAQ,oGAGf,CACEC,iBAAiB,EACjBC,oBAAoB,IAEhBC,KAAA,WAAA,OAAMC,QAAYC,IAAA,mCAP1B,MAAA,WAAA,OAQSD,QAAAC,IAAA,mCAKLC,IAAAA,IAAIC,SAAAA,EAAAA,EAAUC,GAAdF,EAAIC,UAAU,8BAA+B,KAC7CD,EAAIC,UAAU,+BAAgC,0EAC9CD,EAAIC,UAAU,+BAAgC,0CAA9CD,MAEDT,IALHY,KAAA,aAAA,SAAAC,EAAAJ,EAAAE,GAOAX,QAASQ,IAAAK,EAAAC,MACPP,EAAAA,OAAA,KAAgBO,KAAhB,CACAL,QAAW,mBAGZT,IALDe,IAAA,aAAA,SAAAF,EAAAJ,EAAAE,GA8BAK,EAAOC,OAAP,KAAAf,KAvBQ,CACEgB,CAECC,IAAE,YACLC,MAAO,oBACPC,YAAa,iCACbC,SAAU,yEACVC,MALF,KAMEC,OAAQ,eAGRL,CACAC,IAAO,gBACPC,MAAW,qBACXC,YAAU,kCACVC,SALF,yEAMEC,MAAQ,KAfZA,OAAA,mBAsBJR,OAAOC,QAAUjB","file":"app.min.js","sourcesContent":["const express = require('express');\r\nconst mongoose = require('mongoose');\r\n\r\nconst app = express();\r\n\r\napp.use(express.json()); //intercepte toutes les requêtes dont le content-type est json et les met à dispo sur l'objet requête dans req.body\r\n//(autre façon de faire plus ancienne: utiliser le package bodyparser)\r\n\r\n\r\nmongoose.connect(\"mongodb+srv://kimt0t0:<adaJNM39-&>@kimrobcluster.8tem1u2.mongodb.net/?retryWrites=true&w=majority\",\r\n//connexion à la base de donnée mongoDB\r\n//penser à intégrer le mot de passe utilisateur MongoDB après le nom utilisateur ici.mongoose.connect('mongodb+srv://jimbob:<PASSWORD>@cluster0-pme76.mongodb.net/test?retryWrites=true&w=majority',\r\n  {\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true\r\n  })\r\n  .then(() => console.log('Connexion à MongoDB réussie !'))\r\n  .catch(() => console.log('Connexion à MongoDB échouée !')\r\n);\r\n\r\n\r\napp.use((req, res, next) => {\r\n    res.setHeader('Access-Control-Allow-Origin', '*'); //permet d'accéder à l'API depuis n'importe-quelle origine\r\n    res.setHeader('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content, Accept, Content-Type, Authorization'); //ajout des headers aux requêtes envoyées\r\n    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, PATCH, OPTIONS'); //envoi des requêtes avec les méthodes mentionnées\r\n    next();\r\n  });\r\n\r\napp.post('/api/stuff', (req, res, next) => {\r\n  console.log(req.body);\r\n  res.status(201).json({     //201 = code pour création de ressource, nécessaire de renvoyer ce statut sinon ça plante côté utilisateur\r\n    message: 'Objet créé !'\r\n  });\r\n});\r\n\r\napp.get('/api/stuff', (req, res, next) => {\r\n    const stuff = [\r\n      {\r\n        _id: 'oeihfzeoi',\r\n        title: 'Mon premier objet',\r\n        description: 'Les infos de mon premier objet',\r\n        imageUrl: 'https://cdn.pixabay.com/photo/2019/06/11/18/56/camera-4267692_1280.jpg',\r\n        price: 4900,\r\n        userId: 'qsomihvqios',\r\n      },\r\n      {\r\n        _id: 'oeihfzeomoihi',\r\n        title: 'Mon deuxième objet',\r\n        description: 'Les infos de mon deuxième objet',\r\n        imageUrl: 'https://cdn.pixabay.com/photo/2019/06/11/18/56/camera-4267692_1280.jpg',\r\n        price: 2900,\r\n        userId: 'qsomihvqios',\r\n      },\r\n    ];\r\n    res.status(200).json(stuff);\r\n  });\r\n\r\n\r\nmodule.exports = app;"]}